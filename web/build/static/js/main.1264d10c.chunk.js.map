{"version":3,"sources":["core.js","components/dashboard/index.jsx","components/scoreboard/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","Scoreboard","useState","teamOne","teamTwo","bat","score","wicket","over","setScore","useEffect","axios","get","then","res","console","log","data","style","margin","textAlign","textDecorationLine","color","fontStyle","Box","borderRadius","component","sx","m","width","noValidate","autoComplete","TextField","label","variant","value","onChange","e","prev","target","placeholder","type","Button","onClick","post","Dashboard","socket","io","on","message","close","Stack","spacing","direction","Card","minWidth","CardContent","Typography","fontSize","gutterBottom","mb","comentry","App","history","useHistory","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","push","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1264d10c.chunk.js","sourcesContent":["\nconst dev = \"http://localhost:5001\"\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\n\n","import axios from 'axios';\nimport { useState, useEffect } from \"react\"\nimport { baseUrl } from \"./../../core\"\n\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport io from 'socket.io-client';\n\nfunction Scoreboard() {\n    const [score, setScore] = useState({\n        teamOne: \"\",\n        teamTwo: \"\",\n        bat: \"\",\n        score: \"\",\n        wicket: \"\",\n        over: \"\"\n    });\n\n    useEffect(() => {\n        axios.get(`${baseUrl}/api/v1/score`)\n            .then((res) => {\n                console.log(\"res +++: \", res.data);\n                setScore(res.data)\n            })\n    }, [])\n\n    const submit = () => {\n        axios.post(`${baseUrl}/api/v1/score`, score)\n            .then((res) => {\n                console.log(\"res: \", res.data);\n            })\n    }\n\n    return (\n        <div style={{ margin: \"0.5rem\" }}>\n\n            <h1 style={{textAlign:'center', \n            textDecorationLine:'underline', color:'#0d6efd', fontStyle:'italic'}}>\n                 ScoreBoard Admin Panel </h1>\n<br /><br />\n            <Box style={{textAlign:'center', borderRadius:'40px'}}\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '25ch' },\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >\n\n                <TextField\n                    label=\"Team 1\"\n                    variant=\"standard\"\n                    value={score.teamOne}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, teamOne: e.target.value }\n                        })\n                    }}\n                    placeholder=\"Enter Team Name\"\n                />\n\n                <TextField\n                    label=\"Team 2\"\n                    variant=\"standard\"\n                    value={score.teamTwo}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, teamTwo: e.target.value }\n                        })\n                    }}\n                    placeholder=\"Enter Team Name\"\n                />\n                <TextField\n                    label=\"Bating Team\"\n                    variant=\"standard\"\n                    value={score.bat}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, bat: e.target.value }\n                        })\n                    }}\n                    placeholder=\"Batting Team\"\n                />\n                <TextField\n                    label=\"Runs/Score\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.score}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, score: e.target.value }\n                        })\n                    }}\n                    placeholder=\"Scores\"\n                /> \n                <TextField\n                    label=\"Wicket\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.wicket}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, wicket: e.target.value }\n                        })\n                    }}\n                    placeholder=\"Wickets\"\n                />\n                <TextField\n                    label=\"Over\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.over}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, over: e.target.value }\n                        })\n                    }}\n                    placeholder=\"Overs\"\n                /> <br /><br /><br />\n               \n                <Button variant=\"contained\" onClick={submit}>UPDATE ScoreBoard</Button>\n                \n            </Box>\n\n        </div>\n    );\n}\n\nexport default Scoreboard;","import axios from 'axios';\nimport { useState, useEffect } from \"react\"\nimport { baseUrl } from \"./../../core\"\n\nimport Stack from '@mui/material/Stack';\nimport io from 'socket.io-client';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\n\nfunction Dashboard() {\n\n    const [score, setScore] = useState({})\n\n\n    useEffect(() => {\n        axios.get(`${baseUrl}/api/v1/score`)\n            .then((res) => {\n                console.log(\"res +++: \", res.data);\n                setScore(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\n\n        socket.on('connect', function () {\n            console.log(\"connected to server\")\n        });\n        socket.on('disconnect', function (message) {\n            console.log(\"disconnected from server: \", message);\n        });\n        socket.on('SCORE', function (data) {\n            console.log(data);\n            setScore(data)\n        });\n\n        return () => {\n            socket.close();\n        };\n    }, []);\n\n\n\n\n    return (\n        <div style={{ margin: \"1rem\" }}>\n\n            <h1 style={{textAlign:'center', \n            textDecorationLine:'underline', color:'#0d6efd', fontStyle:'italic'}}>\n             Live ScoreBoard! </h1>\n\n\n            <Stack spacing={2} direction=\"column\" >\n<br />\n                <Card sx={{ minWidth: 275 }}>\n                    <CardContent style={{textAlign:'center'}}>\n                        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                            {score?.teamOne} VS. {score?.teamTwo} (Bat {score.bat})\n                        </Typography>\n<br />\n\n                        <Typography variant=\"h5\" component=\"div\">\n                            {score?.score} / {score?.wicket}\n                        </Typography>\n<br />\n\n                        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                            Over: {score.over}\n                        </Typography>\n<br />\n\n                        <Typography variant=\"body2\">\n                            Commentry: <b> {score?.comentry || \"Catch drop by Ahmed Shahzad\"}</b>\n                        </Typography>\n                    </CardContent>\n                    {/* <CardActions>\n                        <Button size=\"small\">Learn More</Button>\n                    </CardActions> */}\n                </Card>\n            </Stack>\n\n\n        </div>\n    );\n}\n\nexport default Dashboard;","import './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  Redirect\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap';\n\nimport Dashboard from \"./components/dashboard/index\"\nimport Scoreboard from \"./components/scoreboard/index\"\nimport { textAlign } from '@mui/system';\n\n\nfunction App() {\n  let history = useHistory();\n\n  return (\n    <>\n\n      <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Cricket Live ScoreBoard!!!</Navbar.Brand>\n          <br />\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/\") }}>ScoreBoard</Nav.Link>\n          <br />\n              <Nav.Link onClick={() => { history.push(\"/admin\") }}>Admin Panel</Nav.Link>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      \n      <Switch>\n        <Route exact path=\"/\" component={Scoreboard} />\n        <Route path=\"/admin\" component={Dashboard} />\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}